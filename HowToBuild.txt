How to build Mpir.NET for Windows
=================================

To make a complete build of Mpir.NET, 3 sub projects must be built in the following order:
1) MPIR
2) The modified X-MPIR
3) Mpir.NET

The FAKE (F# make) build script only builds the Mpir.NET part.


Building MPIR
-------------

MPIR can probably be built with the current Visual studio version (VS2013 at the time of this writing), but I've used VS2010 because that's what the MPIR team used.

1) Download MPIR from mpir.org and unpack it to a folder.
2) Get vsyasm from http://www.tortall.net/projects/yasm/
3) Copy the vsyasm files to the VS2013 folder, e.g. C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin
4) Open <your MPIR folder>\build.vc12\mpir.sln in Visual studio 2013.
5) Select "Release" solution configuration and build lib_mpir_p3. The resulting DLL ends up in <your MPIR folder>\lib\Win32\Release, together with a bunch of header files (it also ends up in <your MPIR folder>\build.vc12, but without the header files).
6) Build lib_mpir_k8 from within Visual Studio 2013. The resulting DLL ends up in <your MPIR folder>\lib\x64\Release, together with a bunch of header files.

7) Copy everything in <your MPIR folder>\lib\Win32\Release to Mpir.NET\xmpir_ModdedForMpir.NET\mpir-precompiled\win32.
8) Copy everything in <your MPIR folder>\lib\x64\Release to Mpir.NET\xmpir_ModdedForMpir.NET\mpir-precompiled\win64.


Building the modified X-MPIR
----------------------------

1) Install PHP (a portable version will do).
2) Edit the paths in xmpir_ModdedForMpir.NET\gen-and-build-win.bat to match your system.
3) Open a command prompt in xmpir_ModdedForMpir.NET and run gen-and-build-win.bat. The build result gets copied to the appropriate Mpir.NET folder.


Building Mpir.NET
-----------------

Mpir.NET can be built with Visual Studio 2013, or by running build.cmd. 


Generating docs
---------------

The API reference is generated by Doxygen. Run doxygen and open "Doxyfile" in the project root directory.
The intro and samples (http://wezeku.github.io/Mpir.NET/) are generated and uploaded by "build releasedocs", which also uploads the API reference.


Building for Linux
==================

According to their respective authors, MPIR and X-MPIR can be built for Linux. That should probably also be true for my modified version of X-MPIR, as I have tried not to mess with the Linux specific parts. However, since I have had no need to run X-MPIR under Linux, I haven't tried it. If it works, then so should the Mpir.NET dll. Unfortunately, I can't provide any instructions for building a Linux version, but then again Linux users are accustomed to having to find out things by themselves.
